var tipuesearch = {"pages": [{'title': 'About', 'text': '網站倉儲: https://github.com/BrianTsai071/cp2021 \n 個人網站: https://briantsai071.github.io/cp2021/ \n', 'tags': '', 'url': 'About.html'}, {'title': 'HW1', 'text': '將左右碰撞移動的紅色方塊, 改為先移動到水平畫面中心點位置後, 接著上下碰撞移動 \n from browser import html\nfrom browser import document as doc\nimport browser.timer\n\ncanvas = html.CANVAS(width = 300, height = 300)\ncanvas.id = "game-board"\nbrython_div = doc["brython_div"]\nbrython_div <= canvas\nctx = canvas.getContext("2d")\n\npx = 0\npy = 150\nwidth = 20\nheight = 20\nspeed = 2\ndef game():\n    global px, py, width, height, speed\n    ctx.clearRect(px, py, width, height)\n    ctx.fillStyle = "red"\n    if px < (canvas.width/2):\n        px += speed\n    else:\n        py += speed\n    \n        if py < 0 or (py + height) > canvas.height:\n            speed = -speed\n            \n    ctx.fillRect(px, py, width, height)\n    \nbrowser.timer.set_interval(game, 10) \n 讓使用者可以利用按鈕啟動或中斷紅色方塊上下碰撞移動 \n from browser import html\nfrom browser import document as doc\nfrom browser import timer\n\ncanvas = html.CANVAS(width = 400, height = 100)\ncanvas.id = "game-board3"\nbrython_div = doc["brython_div3"]\nbrython_div <= canvas\nbrython_div <= html.BUTTON("啟動", id="power")\nctx = canvas.getContext("2d")\n\n\npx = 0\npy = 50\nwidth = 20\nheight = 20\nspeedx = 2\nspeedy = 2\n\n\ndef game():\n    global px, py, width, height, speedx, speedy\n    ctx.clearRect(px, py, width, height)\n    ctx.fillStyle = "red"\n    px += speedx\n    if px > 200 :\n        speedx = 0\n        py += speedy\n    if py < 0 or (py + height) > canvas.height :\n        speedy = -speedy\n    ctx.fillRect(px, py, width, height)\n\ngame()\nQQbe = None\n\ndef pig(ev):\n    global QQbe\n    if QQbe is None:\n       QQbe = timer.set_interval(game, 10)\n       doc[\'power\'].text = \'暫停\'\n    elif QQbe == \'hold\':\n        QQbe = timer.set_interval(game, 10)\n        doc[\'power\'].text = \'暫停\'\n    else: \n        timer.clear_interval(QQbe)\n        QQbe = \'hold\'\n        doc[\'power\'].text = \'繼續\'\n\ndoc["power"].bind("click", pig) \n from browser import html\nfrom browser import document as doc\nfrom browser import timer\n\ncanvas = html.CANVAS(width = 400, height = 100)\ncanvas.id = "game-board3"\nbrython_div = doc["brython_div3"]\nbrython_div <= canvas\nbrython_div <= html.BUTTON("啟動", id="power")\nctx = canvas.getContext("2d")\n\n\npx = 0\npy = 50\nwidth = 20\nheight = 20\nspeedx = 2\nspeedy = 2\n\n\ndef game():\n    global px, py, width, height, speedx, speedy\n    ctx.clearRect(px, py, width, height)\n    ctx.fillStyle = "red"\n    px += speedx\n    if px > 200 :\n        speedx = 0\n        py += speedy\n    if py < 0 or (py + height) > canvas.height :\n        speedy = -speedy\n    ctx.fillRect(px, py, width, height)\n\ngame()\nQQbe = None\n\ndef pig(ev):\n    global QQbe\n    if QQbe is None:\n       QQbe = timer.set_interval(game, 10)\n       doc[\'power\'].text = \'暫停\'\n    elif QQbe == \'hold\':\n        QQbe = timer.set_interval(game, 10)\n        doc[\'power\'].text = \'暫停\'\n    else: \n        timer.clear_interval(QQbe)\n        QQbe = \'hold\'\n        doc[\'power\'].text = \'繼續\'\n\ndoc["power"].bind("click", pig) \n from browser import html\nfrom browser import document as doc\nfrom browser import timer\n\ncanvas = html.CANVAS(width = 400, height = 100)\ncanvas.id = "game-board3"\nbrython_div = doc["brython_div3"]\nbrython_div <= canvas\nbrython_div <= html.BUTTON("啟動", id="power")\nctx = canvas.getContext("2d")\n\n\npx = 0\npy = 50\nwidth = 20\nheight = 20\nspeedx = 2\nspeedy = 2\n\n\ndef game():\n    global px, py, width, height, speedx, speedy\n    ctx.clearRect(px, py, width, height)\n    ctx.fillStyle = "red"\n    px += speedx\n    if px > 200 :\n        speedx = 0\n        py += speedy\n    if py < 0 or (py + height) > canvas.height :\n        speedy = -speedy\n    ctx.fillRect(px, py, width, height)\n\ngame()\nQQbe = None\n\ndef pig(ev):\n    global QQbe\n    if QQbe is None:\n       QQbe = timer.set_interval(game, 10)\n       doc[\'power\'].text = \'暫停\'\n    elif QQbe == \'hold\':\n        QQbe = timer.set_interval(game, 10)\n        doc[\'power\'].text = \'暫停\'\n    else: \n        timer.clear_interval(QQbe)\n        QQbe = \'hold\'\n        doc[\'power\'].text = \'繼續\'\n\ndoc["power"].bind("click", pig) \n 英打 \n Every gist is a Git repository, which means that it can be forked and cloned. If you are signed in to GitHub when you create a gist, the gist will be associated with your account and you will see it in your list of gists when you navigate to your gist home page.\n\nGists can be public or secret. Public gists show up in Discover, where people can browse new gists as they\'re created. They\'re also searchable, so you can use them if you\'d like other people to find and see your work.\n\nSecret gists don\'t show up in Discover and are not searchable. Secret gists aren\'t private. If you send the URL of a secret gist to a friend, they\'ll be able to see it. However, if someone you don\'t know discovers the URL, they\'ll also be able to see your gist. If you need to keep your code away from prying eyes, you may want to create a private repository instead.\n\nAfter creating a gist, you cannot convert it from public to secret.\n\nYou\'ll receive a notification when:\n\nYou are the author of a gist.\nSomeone mentions you in a gist.\nYou subscribe to a gist, by clicking Subscribe at the top of any gist.\nYou can pin gists to your profile so other people can see them easily. For more information, see "Pinning items to your profile."\n\nYou can discover public gists others have created by going to the gist home page and clicking All Gists. This will take you to a page of all gists sorted and displayed by time of creation or update. You can also search gists by language with Gist Search. Gist search uses the same search syntax as code search.\n\nSince gists are Git repositories, you can view their full commit history, complete with diffs. You can also fork or clone gists. For more information, see "Forking and cloning gists".\n\nYou can download a ZIP file of a gist by clicking the Download ZIP button at the top of the gist. You can embed a gist in any text field that supports Javascript, such as a blog post. To get the embed code, click the clipboard icon next to the Embed URL of a gist. To embed a specific gist file, append the Embed URL with ?file=FILENAME.\n\nGist supports mapping GeoJSON files. These maps are displayed in embedded gists, so you can easily share and embed maps. For more information, see "Working with non-code files."\n1 hr \n 中打 \n \n Gist 是Github 的一個子公司，且任何人都可以使用這個服務，不論你是否擁\n有Github帳號。以開發者的角度來說，最基本的功能就是可以分享片段的原\n始碼。有別於Github的Repository，Gist可以只分享專案中的某一個小檔案\n中的程式碼，且嫆有私人的選項，讓別人不會搜尋到你的Gist。在Github的\nRepository設定Private是要付費的，但在Gist是不需要的。除此之外Gist\n還有許多用處，包括可以直接執行我們就來一一介紹吧!\n\n7 min 50 sec \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'HW2', 'text': '', 'tags': '', 'url': 'HW2.html'}, {'title': 'W10', 'text': '', 'tags': '', 'url': 'W10.html'}, {'title': 'EXAM', 'text': '', 'tags': '', 'url': 'EXAM.html'}, {'title': 'HW3', 'text': '', 'tags': '', 'url': 'HW3.html'}, {'title': 'FINAL PROJECT', 'text': '', 'tags': '', 'url': 'FINAL PROJECT.html'}]};